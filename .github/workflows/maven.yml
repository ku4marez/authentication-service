name: Build and Test JWT Authentication Service

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configure Maven for GitHub Packages
      - name: Configure Maven Settings
        env:
          GITHUB_ACTOR: ${{ secrets.USERNAME }}
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          mkdir -p ~/.m2
          echo "<settings>
          <servers>
            <server>
              <id>github</id>
              <username>${{GITHUB_ACTOR}}</username>
              <password>${{GITHUB_TOKEN}}</password>
            </server>
          </servers>
          </settings>" > ~/.m2/settings.xml

      # Install Docker Compose as a CLI plugin
      - name: Install Docker Compose Plugin
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -fsSL "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      # Verify Docker is running
      - name: Verify Docker Setup
        run: docker info

      # Adjust system settings for MongoDB
      - name: Adjust System Settings
        run: |
          sudo sysctl -w vm.max_map_count=1677720
          sudo sysctl -w vm.swappiness=1

      # Start Docker Compose for MongoDB
      - name: Start MongoDB with Docker Compose
        run: docker compose -f src/test/resources/docker-compose.yml up -d

      # Set up Java for the service
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven

      - name: Debug Maven Settings
        run: cat ~/.m2/settings.xml

      - name: Resolve Dependencies
        run: mvn dependency:resolve -X

      # Run Tests
      - name: Run Tests
        run: mvn test -X

      # Tear down Docker Compose
      - name: Tear Down MongoDB
        run: docker compose -f src/test/resources/docker-compose.yml down
